circuit Logarithm :
  module PipelineHandshake :
    input clock : Clock
    input reset : UInt<1>
    input validPre : UInt<1>
    output readyPre : UInt<1>
    input lastPre : UInt<1>
    output validNxt : UInt<1>
    input readyNxt : UInt<1>
    output regen_0 : UInt<1>
    output regen_1 : UInt<1>
    output regen_2 : UInt<1>
    output regen_3 : UInt<1>
    output lastNxt : UInt<1>
    input rst : AsyncReset

    reg valid_1_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node ready_4 = readyNxt @[pipelinehsk.scala 17:21 30:22]
    reg valid_4_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node valid_4 = valid_4_r @[pipelinehsk.scala 16:21 22:24]
    node _ready_3_T = not(valid_4) @[pipelinehsk.scala 24:38]
    node _ready_3_T_1 = or(ready_4, _ready_3_T) @[pipelinehsk.scala 24:36]
    node ready_3 = _ready_3_T_1 @[pipelinehsk.scala 17:21 24:22]
    reg valid_3_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node valid_3 = valid_3_r @[pipelinehsk.scala 16:21 22:24]
    node _ready_2_T = not(valid_3) @[pipelinehsk.scala 24:38]
    node _ready_2_T_1 = or(ready_3, _ready_2_T) @[pipelinehsk.scala 24:36]
    node ready_2 = _ready_2_T_1 @[pipelinehsk.scala 17:21 24:22]
    reg valid_2_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node valid_2 = valid_2_r @[pipelinehsk.scala 16:21 22:24]
    node _ready_1_T = not(valid_2) @[pipelinehsk.scala 24:38]
    node _ready_1_T_1 = or(ready_2, _ready_1_T) @[pipelinehsk.scala 24:36]
    node ready_1 = _ready_1_T_1 @[pipelinehsk.scala 17:21 24:22]
    node valid_1 = valid_1_r @[pipelinehsk.scala 16:21 22:24]
    node _ready_0_T = not(valid_1) @[pipelinehsk.scala 24:38]
    node _ready_0_T_1 = or(ready_1, _ready_0_T) @[pipelinehsk.scala 24:36]
    node ready_0 = _ready_0_T_1 @[pipelinehsk.scala 17:21 24:22]
    node valid_0 = validPre @[pipelinehsk.scala 16:21 27:18]
    node _GEN_0 = mux(ready_0, valid_0, valid_1_r) @[Reg.scala 29:18 28:20 29:22]
    reg last_1_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node last_0 = lastPre @[pipelinehsk.scala 18:20 31:17]
    node _GEN_1 = mux(regen_0, last_0, last_1_r) @[Reg.scala 29:18 28:20 29:22]
    node _regen_0_T = and(valid_0, ready_0) @[pipelinehsk.scala 25:34]
    node _GEN_2 = mux(ready_1, valid_1, valid_2_r) @[Reg.scala 29:18 28:20 29:22]
    reg last_2_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node last_1 = last_1_r @[pipelinehsk.scala 18:20 23:23]
    node _GEN_3 = mux(regen_1, last_1, last_2_r) @[Reg.scala 29:18 28:20 29:22]
    node _regen_1_T = and(valid_1, ready_1) @[pipelinehsk.scala 25:34]
    node _GEN_4 = mux(ready_2, valid_2, valid_3_r) @[Reg.scala 29:18 28:20 29:22]
    reg last_3_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node last_2 = last_2_r @[pipelinehsk.scala 18:20 23:23]
    node _GEN_5 = mux(regen_2, last_2, last_3_r) @[Reg.scala 29:18 28:20 29:22]
    node _regen_2_T = and(valid_2, ready_2) @[pipelinehsk.scala 25:34]
    node _GEN_6 = mux(ready_3, valid_3, valid_4_r) @[Reg.scala 29:18 28:20 29:22]
    reg last_4_r : UInt<1>, clock with :
      reset => (rst, UInt<1>("h0")) @[Reg.scala 28:20]
    node last_3 = last_3_r @[pipelinehsk.scala 18:20 23:23]
    node _GEN_7 = mux(regen_3, last_3, last_4_r) @[Reg.scala 29:18 28:20 29:22]
    node _regen_3_T = and(valid_3, ready_3) @[pipelinehsk.scala 25:34]
    node last_4 = last_4_r @[pipelinehsk.scala 18:20 23:23]
    readyPre <= ready_0 @[pipelinehsk.scala 28:18]
    validNxt <= valid_4 @[pipelinehsk.scala 29:18]
    regen_0 <= _regen_0_T @[pipelinehsk.scala 25:22]
    regen_1 <= _regen_1_T @[pipelinehsk.scala 25:22]
    regen_2 <= _regen_2_T @[pipelinehsk.scala 25:22]
    regen_3 <= _regen_3_T @[pipelinehsk.scala 25:22]
    lastNxt <= last_4 @[pipelinehsk.scala 32:17]
    valid_1_r <= _GEN_0 @[Reg.scala 28:{20,20}]
    last_1_r <= _GEN_1 @[Reg.scala 28:{20,20}]
    valid_2_r <= _GEN_2 @[Reg.scala 28:{20,20}]
    last_2_r <= _GEN_3 @[Reg.scala 28:{20,20}]
    valid_3_r <= _GEN_4 @[Reg.scala 28:{20,20}]
    last_3_r <= _GEN_5 @[Reg.scala 28:{20,20}]
    valid_4_r <= _GEN_6 @[Reg.scala 28:{20,20}]
    last_4_r <= _GEN_7 @[Reg.scala 28:{20,20}]

  module Logarithm :
    input clock : Clock
    input reset : UInt<1>
    output io_input_ready : UInt<1>
    input io_input_valid : UInt<1>
    input io_input_bits_in_0 : SInt<8>
    input io_input_bits_last : UInt<1>
    input io_output_ready : UInt<1>
    output io_output_valid : UInt<1>
    output io_output_bits_out_0 : SInt<12>
    output io_output_bits_last : UInt<1>
    input rst : AsyncReset

    inst hsk of PipelineHandshake @[logarithm.scala 26:21]
    node _lod_0_8_T = bits(io_input_bits_in_0, 7, 7) @[logarithm.scala 38:44]
    node _lod_0_1_T = bits(io_input_bits_in_0, 7, 1) @[logarithm.scala 41:47]
    node _lod_0_1_T_1 = bits(_lod_0_1_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_1_T_2 = bits(_lod_0_1_T, 1, 1) @[logarithm.scala 41:58]
    node _lod_0_1_T_3 = bits(_lod_0_1_T, 2, 2) @[logarithm.scala 41:58]
    node _lod_0_1_T_4 = bits(_lod_0_1_T, 3, 3) @[logarithm.scala 41:58]
    node _lod_0_1_T_5 = bits(_lod_0_1_T, 4, 4) @[logarithm.scala 41:58]
    node _lod_0_1_T_6 = bits(_lod_0_1_T, 5, 5) @[logarithm.scala 41:58]
    node _lod_0_1_T_7 = bits(_lod_0_1_T, 6, 6) @[logarithm.scala 41:58]
    node _lod_0_1_T_8 = or(UInt<1>("h0"), _lod_0_1_T_1) @[logarithm.scala 41:78]
    node _lod_0_1_T_9 = or(_lod_0_1_T_8, _lod_0_1_T_2) @[logarithm.scala 41:78]
    node _lod_0_1_T_10 = or(_lod_0_1_T_9, _lod_0_1_T_3) @[logarithm.scala 41:78]
    node _lod_0_1_T_11 = or(_lod_0_1_T_10, _lod_0_1_T_4) @[logarithm.scala 41:78]
    node _lod_0_1_T_12 = or(_lod_0_1_T_11, _lod_0_1_T_5) @[logarithm.scala 41:78]
    node _lod_0_1_T_13 = or(_lod_0_1_T_12, _lod_0_1_T_6) @[logarithm.scala 41:78]
    node _lod_0_1_T_14 = or(_lod_0_1_T_13, _lod_0_1_T_7) @[logarithm.scala 41:78]
    node _lod_0_1_T_15 = not(_lod_0_1_T_14) @[logarithm.scala 41:26]
    node _lod_0_1_T_16 = bits(io_input_bits_in_0, 0, 0) @[logarithm.scala 41:105]
    node _lod_0_1_T_17 = and(_lod_0_1_T_15, _lod_0_1_T_16) @[logarithm.scala 41:84]
    node _lod_0_2_T = bits(io_input_bits_in_0, 7, 2) @[logarithm.scala 41:47]
    node _lod_0_2_T_1 = bits(_lod_0_2_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_2_T_2 = bits(_lod_0_2_T, 1, 1) @[logarithm.scala 41:58]
    node _lod_0_2_T_3 = bits(_lod_0_2_T, 2, 2) @[logarithm.scala 41:58]
    node _lod_0_2_T_4 = bits(_lod_0_2_T, 3, 3) @[logarithm.scala 41:58]
    node _lod_0_2_T_5 = bits(_lod_0_2_T, 4, 4) @[logarithm.scala 41:58]
    node _lod_0_2_T_6 = bits(_lod_0_2_T, 5, 5) @[logarithm.scala 41:58]
    node _lod_0_2_T_7 = or(UInt<1>("h0"), _lod_0_2_T_1) @[logarithm.scala 41:78]
    node _lod_0_2_T_8 = or(_lod_0_2_T_7, _lod_0_2_T_2) @[logarithm.scala 41:78]
    node _lod_0_2_T_9 = or(_lod_0_2_T_8, _lod_0_2_T_3) @[logarithm.scala 41:78]
    node _lod_0_2_T_10 = or(_lod_0_2_T_9, _lod_0_2_T_4) @[logarithm.scala 41:78]
    node _lod_0_2_T_11 = or(_lod_0_2_T_10, _lod_0_2_T_5) @[logarithm.scala 41:78]
    node _lod_0_2_T_12 = or(_lod_0_2_T_11, _lod_0_2_T_6) @[logarithm.scala 41:78]
    node _lod_0_2_T_13 = not(_lod_0_2_T_12) @[logarithm.scala 41:26]
    node _lod_0_2_T_14 = bits(io_input_bits_in_0, 1, 1) @[logarithm.scala 41:105]
    node _lod_0_2_T_15 = and(_lod_0_2_T_13, _lod_0_2_T_14) @[logarithm.scala 41:84]
    node _lod_0_3_T = bits(io_input_bits_in_0, 7, 3) @[logarithm.scala 41:47]
    node _lod_0_3_T_1 = bits(_lod_0_3_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_3_T_2 = bits(_lod_0_3_T, 1, 1) @[logarithm.scala 41:58]
    node _lod_0_3_T_3 = bits(_lod_0_3_T, 2, 2) @[logarithm.scala 41:58]
    node _lod_0_3_T_4 = bits(_lod_0_3_T, 3, 3) @[logarithm.scala 41:58]
    node _lod_0_3_T_5 = bits(_lod_0_3_T, 4, 4) @[logarithm.scala 41:58]
    node _lod_0_3_T_6 = or(UInt<1>("h0"), _lod_0_3_T_1) @[logarithm.scala 41:78]
    node _lod_0_3_T_7 = or(_lod_0_3_T_6, _lod_0_3_T_2) @[logarithm.scala 41:78]
    node _lod_0_3_T_8 = or(_lod_0_3_T_7, _lod_0_3_T_3) @[logarithm.scala 41:78]
    node _lod_0_3_T_9 = or(_lod_0_3_T_8, _lod_0_3_T_4) @[logarithm.scala 41:78]
    node _lod_0_3_T_10 = or(_lod_0_3_T_9, _lod_0_3_T_5) @[logarithm.scala 41:78]
    node _lod_0_3_T_11 = not(_lod_0_3_T_10) @[logarithm.scala 41:26]
    node _lod_0_3_T_12 = bits(io_input_bits_in_0, 2, 2) @[logarithm.scala 41:105]
    node _lod_0_3_T_13 = and(_lod_0_3_T_11, _lod_0_3_T_12) @[logarithm.scala 41:84]
    node _lod_0_4_T = bits(io_input_bits_in_0, 7, 4) @[logarithm.scala 41:47]
    node _lod_0_4_T_1 = bits(_lod_0_4_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_4_T_2 = bits(_lod_0_4_T, 1, 1) @[logarithm.scala 41:58]
    node _lod_0_4_T_3 = bits(_lod_0_4_T, 2, 2) @[logarithm.scala 41:58]
    node _lod_0_4_T_4 = bits(_lod_0_4_T, 3, 3) @[logarithm.scala 41:58]
    node _lod_0_4_T_5 = or(UInt<1>("h0"), _lod_0_4_T_1) @[logarithm.scala 41:78]
    node _lod_0_4_T_6 = or(_lod_0_4_T_5, _lod_0_4_T_2) @[logarithm.scala 41:78]
    node _lod_0_4_T_7 = or(_lod_0_4_T_6, _lod_0_4_T_3) @[logarithm.scala 41:78]
    node _lod_0_4_T_8 = or(_lod_0_4_T_7, _lod_0_4_T_4) @[logarithm.scala 41:78]
    node _lod_0_4_T_9 = not(_lod_0_4_T_8) @[logarithm.scala 41:26]
    node _lod_0_4_T_10 = bits(io_input_bits_in_0, 3, 3) @[logarithm.scala 41:105]
    node _lod_0_4_T_11 = and(_lod_0_4_T_9, _lod_0_4_T_10) @[logarithm.scala 41:84]
    node _lod_0_5_T = bits(io_input_bits_in_0, 7, 5) @[logarithm.scala 41:47]
    node _lod_0_5_T_1 = bits(_lod_0_5_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_5_T_2 = bits(_lod_0_5_T, 1, 1) @[logarithm.scala 41:58]
    node _lod_0_5_T_3 = bits(_lod_0_5_T, 2, 2) @[logarithm.scala 41:58]
    node _lod_0_5_T_4 = or(UInt<1>("h0"), _lod_0_5_T_1) @[logarithm.scala 41:78]
    node _lod_0_5_T_5 = or(_lod_0_5_T_4, _lod_0_5_T_2) @[logarithm.scala 41:78]
    node _lod_0_5_T_6 = or(_lod_0_5_T_5, _lod_0_5_T_3) @[logarithm.scala 41:78]
    node _lod_0_5_T_7 = not(_lod_0_5_T_6) @[logarithm.scala 41:26]
    node _lod_0_5_T_8 = bits(io_input_bits_in_0, 4, 4) @[logarithm.scala 41:105]
    node _lod_0_5_T_9 = and(_lod_0_5_T_7, _lod_0_5_T_8) @[logarithm.scala 41:84]
    node _lod_0_6_T = bits(io_input_bits_in_0, 7, 6) @[logarithm.scala 41:47]
    node _lod_0_6_T_1 = bits(_lod_0_6_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_6_T_2 = bits(_lod_0_6_T, 1, 1) @[logarithm.scala 41:58]
    node _lod_0_6_T_3 = or(UInt<1>("h0"), _lod_0_6_T_1) @[logarithm.scala 41:78]
    node _lod_0_6_T_4 = or(_lod_0_6_T_3, _lod_0_6_T_2) @[logarithm.scala 41:78]
    node _lod_0_6_T_5 = not(_lod_0_6_T_4) @[logarithm.scala 41:26]
    node _lod_0_6_T_6 = bits(io_input_bits_in_0, 5, 5) @[logarithm.scala 41:105]
    node _lod_0_6_T_7 = and(_lod_0_6_T_5, _lod_0_6_T_6) @[logarithm.scala 41:84]
    node _lod_0_7_T = bits(io_input_bits_in_0, 7, 7) @[logarithm.scala 41:47]
    node _lod_0_7_T_1 = bits(_lod_0_7_T, 0, 0) @[logarithm.scala 41:58]
    node _lod_0_7_T_2 = or(UInt<1>("h0"), _lod_0_7_T_1) @[logarithm.scala 41:78]
    node _lod_0_7_T_3 = not(_lod_0_7_T_2) @[logarithm.scala 41:26]
    node _lod_0_7_T_4 = bits(io_input_bits_in_0, 6, 6) @[logarithm.scala 41:105]
    node _lod_0_7_T_5 = and(_lod_0_7_T_3, _lod_0_7_T_4) @[logarithm.scala 41:84]
    reg data1Lod_0_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_0) @[Reg.scala 16:16]
    reg data1Lod_0_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_1) @[Reg.scala 16:16]
    reg data1Lod_0_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_2) @[Reg.scala 16:16]
    reg data1Lod_0_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_3) @[Reg.scala 16:16]
    reg data1Lod_0_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_4) @[Reg.scala 16:16]
    reg data1Lod_0_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_5) @[Reg.scala 16:16]
    reg data1Lod_0_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_6) @[Reg.scala 16:16]
    reg data1Lod_0_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_7) @[Reg.scala 16:16]
    reg data1Lod_0_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), data1Lod_0_8) @[Reg.scala 16:16]
    node lod_0_0 = UInt<1>("h0") @[logarithm.scala 36:19 39:19]
    node _GEN_0 = mux(hsk.regen_0, lod_0_0, data1Lod_0_0) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_1 = _lod_0_1_T_17 @[logarithm.scala 36:19 41:23]
    node _GEN_1 = mux(hsk.regen_0, lod_0_1, data1Lod_0_1) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_2 = _lod_0_2_T_15 @[logarithm.scala 36:19 41:23]
    node _GEN_2 = mux(hsk.regen_0, lod_0_2, data1Lod_0_2) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_3 = _lod_0_3_T_13 @[logarithm.scala 36:19 41:23]
    node _GEN_3 = mux(hsk.regen_0, lod_0_3, data1Lod_0_3) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_4 = _lod_0_4_T_11 @[logarithm.scala 36:19 41:23]
    node _GEN_4 = mux(hsk.regen_0, lod_0_4, data1Lod_0_4) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_5 = _lod_0_5_T_9 @[logarithm.scala 36:19 41:23]
    node _GEN_5 = mux(hsk.regen_0, lod_0_5, data1Lod_0_5) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_6 = _lod_0_6_T_7 @[logarithm.scala 36:19 41:23]
    node _GEN_6 = mux(hsk.regen_0, lod_0_6, data1Lod_0_6) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_7 = _lod_0_7_T_5 @[logarithm.scala 36:19 41:23]
    node _GEN_7 = mux(hsk.regen_0, lod_0_7, data1Lod_0_7) @[Reg.scala 16:16 17:{18,22}]
    node lod_0_8 = _lod_0_8_T @[logarithm.scala 36:19 38:21]
    node _GEN_8 = mux(hsk.regen_0, lod_0_8, data1Lod_0_8) @[Reg.scala 16:16 17:{18,22}]
    reg data1In_0 : SInt<8>, clock with :
      reset => (UInt<1>("h0"), data1In_0) @[Reg.scala 16:16]
    node _GEN_9 = mux(hsk.regen_0, io_input_bits_in_0, data1In_0) @[Reg.scala 16:16 17:{18,22}]
    node _data2InMux_0_T = shl(data1In_0, 8) @[logarithm.scala 51:52]
    node _data2InMux_0_T_1 = bits(_data2InMux_0_T, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_2 = mux(data1Lod_0_0, _data2InMux_0_T_1, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_3 = shl(data1In_0, 7) @[logarithm.scala 51:52]
    node _data2InMux_0_T_4 = bits(_data2InMux_0_T_3, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_5 = mux(data1Lod_0_1, _data2InMux_0_T_4, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_6 = shl(data1In_0, 6) @[logarithm.scala 51:52]
    node _data2InMux_0_T_7 = bits(_data2InMux_0_T_6, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_8 = mux(data1Lod_0_2, _data2InMux_0_T_7, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_9 = shl(data1In_0, 5) @[logarithm.scala 51:52]
    node _data2InMux_0_T_10 = bits(_data2InMux_0_T_9, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_11 = mux(data1Lod_0_3, _data2InMux_0_T_10, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_12 = shl(data1In_0, 4) @[logarithm.scala 51:52]
    node _data2InMux_0_T_13 = bits(_data2InMux_0_T_12, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_14 = mux(data1Lod_0_4, _data2InMux_0_T_13, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_15 = shl(data1In_0, 3) @[logarithm.scala 51:52]
    node _data2InMux_0_T_16 = bits(_data2InMux_0_T_15, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_17 = mux(data1Lod_0_5, _data2InMux_0_T_16, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_18 = shl(data1In_0, 2) @[logarithm.scala 51:52]
    node _data2InMux_0_T_19 = bits(_data2InMux_0_T_18, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_20 = mux(data1Lod_0_6, _data2InMux_0_T_19, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_21 = shl(data1In_0, 1) @[logarithm.scala 51:52]
    node _data2InMux_0_T_22 = bits(_data2InMux_0_T_21, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_23 = mux(data1Lod_0_7, _data2InMux_0_T_22, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_24 = shl(data1In_0, 0) @[logarithm.scala 51:52]
    node _data2InMux_0_T_25 = bits(_data2InMux_0_T_24, 7, 0) @[logarithm.scala 51:62]
    node _data2InMux_0_T_26 = mux(data1Lod_0_8, _data2InMux_0_T_25, UInt<8>("h0")) @[logarithm.scala 51:37]
    node _data2InMux_0_T_27 = or(UInt<8>("h0"), _data2InMux_0_T_2) @[logarithm.scala 52:33]
    node _data2InMux_0_T_28 = or(_data2InMux_0_T_27, _data2InMux_0_T_5) @[logarithm.scala 52:33]
    node _data2InMux_0_T_29 = or(_data2InMux_0_T_28, _data2InMux_0_T_8) @[logarithm.scala 52:33]
    node _data2InMux_0_T_30 = or(_data2InMux_0_T_29, _data2InMux_0_T_11) @[logarithm.scala 52:33]
    node _data2InMux_0_T_31 = or(_data2InMux_0_T_30, _data2InMux_0_T_14) @[logarithm.scala 52:33]
    node _data2InMux_0_T_32 = or(_data2InMux_0_T_31, _data2InMux_0_T_17) @[logarithm.scala 52:33]
    node _data2InMux_0_T_33 = or(_data2InMux_0_T_32, _data2InMux_0_T_20) @[logarithm.scala 52:33]
    node _data2InMux_0_T_34 = or(_data2InMux_0_T_33, _data2InMux_0_T_23) @[logarithm.scala 52:33]
    node _data2InMux_0_T_35 = or(_data2InMux_0_T_34, _data2InMux_0_T_26) @[logarithm.scala 52:33]
    node _data2InMux_0_T_36 = asSInt(_data2InMux_0_T_35) @[logarithm.scala 52:50]
    node _T = mux(data1Lod_0_0, asSInt(UInt<4>("hb")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_1 = mux(data1Lod_0_1, asSInt(UInt<4>("hc")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_2 = mux(data1Lod_0_2, asSInt(UInt<4>("hd")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_3 = mux(data1Lod_0_3, asSInt(UInt<4>("he")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_4 = mux(data1Lod_0_4, asSInt(UInt<4>("hf")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_5 = mux(data1Lod_0_5, asSInt(UInt<4>("h0")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_6 = mux(data1Lod_0_6, asSInt(UInt<4>("h1")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_7 = mux(data1Lod_0_7, asSInt(UInt<4>("h2")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_8 = mux(data1Lod_0_8, asSInt(UInt<4>("h3")), asSInt(UInt<4>("h0"))) @[logarithm.scala 54:33]
    node _T_9 = or(asSInt(UInt<4>("h0")), _T) @[logarithm.scala 55:36]
    node _T_10 = asSInt(_T_9) @[logarithm.scala 55:36]
    node _T_11 = or(_T_10, _T_1) @[logarithm.scala 55:36]
    node _T_12 = asSInt(_T_11) @[logarithm.scala 55:36]
    node _T_13 = or(_T_12, _T_2) @[logarithm.scala 55:36]
    node _T_14 = asSInt(_T_13) @[logarithm.scala 55:36]
    node _T_15 = or(_T_14, _T_3) @[logarithm.scala 55:36]
    node _T_16 = asSInt(_T_15) @[logarithm.scala 55:36]
    node _T_17 = or(_T_16, _T_4) @[logarithm.scala 55:36]
    node _T_18 = asSInt(_T_17) @[logarithm.scala 55:36]
    node _T_19 = or(_T_18, _T_5) @[logarithm.scala 55:36]
    node _T_20 = asSInt(_T_19) @[logarithm.scala 55:36]
    node _T_21 = or(_T_20, _T_6) @[logarithm.scala 55:36]
    node _T_22 = asSInt(_T_21) @[logarithm.scala 55:36]
    node _T_23 = or(_T_22, _T_7) @[logarithm.scala 55:36]
    node _T_24 = asSInt(_T_23) @[logarithm.scala 55:36]
    node _T_25 = or(_T_24, _T_8) @[logarithm.scala 55:36]
    node _T_26 = asSInt(_T_25) @[logarithm.scala 55:36]
    reg data2In_0 : SInt<8>, clock with :
      reset => (UInt<1>("h0"), data2In_0) @[Reg.scala 16:16]
    node data2InMux_0 = _data2InMux_0_T_36 @[logarithm.scala 47:26 50:23]
    node _GEN_10 = mux(hsk.regen_1, data2InMux_0, data2In_0) @[Reg.scala 16:16 17:{18,22}]
    reg data2Count_0 : SInt<4>, clock with :
      reset => (UInt<1>("h0"), data2Count_0) @[Reg.scala 16:16]
    node data2CountMux_0 = _T_26 @[logarithm.scala 48:29 53:19]
    node _GEN_11 = mux(hsk.regen_1, data2CountMux_0, data2Count_0) @[Reg.scala 16:16 17:{18,22}]
    node _data3In1_T = bits(data2In_0, 6, 0) @[logarithm.scala 63:52]
    reg data3In1_0 : SInt<9>, clock with :
      reset => (UInt<1>("h0"), data3In1_0) @[Reg.scala 16:16]
    node lut_0 = asSInt(UInt<9>("h0")) @[logarithm.scala 60:19 61:9]
    node _GEN_12 = validif(eq(UInt<1>("h0"), _data3In1_T), lut_0) @[Reg.scala 17:{22,22}]
    node lut_1 = asSInt(UInt<9>("h2")) @[logarithm.scala 60:19 61:9]
    node _GEN_13 = mux(eq(UInt<1>("h1"), _data3In1_T), lut_1, _GEN_12) @[Reg.scala 17:{22,22}]
    node lut_2 = asSInt(UInt<9>("h4")) @[logarithm.scala 60:19 61:9]
    node _GEN_14 = mux(eq(UInt<2>("h2"), _data3In1_T), lut_2, _GEN_13) @[Reg.scala 17:{22,22}]
    node lut_3 = asSInt(UInt<9>("h6")) @[logarithm.scala 60:19 61:9]
    node _GEN_15 = mux(eq(UInt<2>("h3"), _data3In1_T), lut_3, _GEN_14) @[Reg.scala 17:{22,22}]
    node lut_4 = asSInt(UInt<9>("h8")) @[logarithm.scala 60:19 61:9]
    node _GEN_16 = mux(eq(UInt<3>("h4"), _data3In1_T), lut_4, _GEN_15) @[Reg.scala 17:{22,22}]
    node lut_5 = asSInt(UInt<9>("ha")) @[logarithm.scala 60:19 61:9]
    node _GEN_17 = mux(eq(UInt<3>("h5"), _data3In1_T), lut_5, _GEN_16) @[Reg.scala 17:{22,22}]
    node lut_6 = asSInt(UInt<9>("hc")) @[logarithm.scala 60:19 61:9]
    node _GEN_18 = mux(eq(UInt<3>("h6"), _data3In1_T), lut_6, _GEN_17) @[Reg.scala 17:{22,22}]
    node lut_7 = asSInt(UInt<9>("he")) @[logarithm.scala 60:19 61:9]
    node _GEN_19 = mux(eq(UInt<3>("h7"), _data3In1_T), lut_7, _GEN_18) @[Reg.scala 17:{22,22}]
    node lut_8 = asSInt(UInt<9>("h10")) @[logarithm.scala 60:19 61:9]
    node _GEN_20 = mux(eq(UInt<4>("h8"), _data3In1_T), lut_8, _GEN_19) @[Reg.scala 17:{22,22}]
    node lut_9 = asSInt(UInt<9>("h11")) @[logarithm.scala 60:19 61:9]
    node _GEN_21 = mux(eq(UInt<4>("h9"), _data3In1_T), lut_9, _GEN_20) @[Reg.scala 17:{22,22}]
    node lut_10 = asSInt(UInt<9>("h13")) @[logarithm.scala 60:19 61:9]
    node _GEN_22 = mux(eq(UInt<4>("ha"), _data3In1_T), lut_10, _GEN_21) @[Reg.scala 17:{22,22}]
    node lut_11 = asSInt(UInt<9>("h15")) @[logarithm.scala 60:19 61:9]
    node _GEN_23 = mux(eq(UInt<4>("hb"), _data3In1_T), lut_11, _GEN_22) @[Reg.scala 17:{22,22}]
    node lut_12 = asSInt(UInt<9>("h17")) @[logarithm.scala 60:19 61:9]
    node _GEN_24 = mux(eq(UInt<4>("hc"), _data3In1_T), lut_12, _GEN_23) @[Reg.scala 17:{22,22}]
    node lut_13 = asSInt(UInt<9>("h19")) @[logarithm.scala 60:19 61:9]
    node _GEN_25 = mux(eq(UInt<4>("hd"), _data3In1_T), lut_13, _GEN_24) @[Reg.scala 17:{22,22}]
    node lut_14 = asSInt(UInt<9>("h1b")) @[logarithm.scala 60:19 61:9]
    node _GEN_26 = mux(eq(UInt<4>("he"), _data3In1_T), lut_14, _GEN_25) @[Reg.scala 17:{22,22}]
    node lut_15 = asSInt(UInt<9>("h1c")) @[logarithm.scala 60:19 61:9]
    node _GEN_27 = mux(eq(UInt<4>("hf"), _data3In1_T), lut_15, _GEN_26) @[Reg.scala 17:{22,22}]
    node lut_16 = asSInt(UInt<9>("h1e")) @[logarithm.scala 60:19 61:9]
    node _GEN_28 = mux(eq(UInt<5>("h10"), _data3In1_T), lut_16, _GEN_27) @[Reg.scala 17:{22,22}]
    node lut_17 = asSInt(UInt<9>("h20")) @[logarithm.scala 60:19 61:9]
    node _GEN_29 = mux(eq(UInt<5>("h11"), _data3In1_T), lut_17, _GEN_28) @[Reg.scala 17:{22,22}]
    node lut_18 = asSInt(UInt<9>("h22")) @[logarithm.scala 60:19 61:9]
    node _GEN_30 = mux(eq(UInt<5>("h12"), _data3In1_T), lut_18, _GEN_29) @[Reg.scala 17:{22,22}]
    node lut_19 = asSInt(UInt<9>("h23")) @[logarithm.scala 60:19 61:9]
    node _GEN_31 = mux(eq(UInt<5>("h13"), _data3In1_T), lut_19, _GEN_30) @[Reg.scala 17:{22,22}]
    node lut_20 = asSInt(UInt<9>("h25")) @[logarithm.scala 60:19 61:9]
    node _GEN_32 = mux(eq(UInt<5>("h14"), _data3In1_T), lut_20, _GEN_31) @[Reg.scala 17:{22,22}]
    node lut_21 = asSInt(UInt<9>("h27")) @[logarithm.scala 60:19 61:9]
    node _GEN_33 = mux(eq(UInt<5>("h15"), _data3In1_T), lut_21, _GEN_32) @[Reg.scala 17:{22,22}]
    node lut_22 = asSInt(UInt<9>("h29")) @[logarithm.scala 60:19 61:9]
    node _GEN_34 = mux(eq(UInt<5>("h16"), _data3In1_T), lut_22, _GEN_33) @[Reg.scala 17:{22,22}]
    node lut_23 = asSInt(UInt<9>("h2a")) @[logarithm.scala 60:19 61:9]
    node _GEN_35 = mux(eq(UInt<5>("h17"), _data3In1_T), lut_23, _GEN_34) @[Reg.scala 17:{22,22}]
    node lut_24 = asSInt(UInt<9>("h2c")) @[logarithm.scala 60:19 61:9]
    node _GEN_36 = mux(eq(UInt<5>("h18"), _data3In1_T), lut_24, _GEN_35) @[Reg.scala 17:{22,22}]
    node lut_25 = asSInt(UInt<9>("h2e")) @[logarithm.scala 60:19 61:9]
    node _GEN_37 = mux(eq(UInt<5>("h19"), _data3In1_T), lut_25, _GEN_36) @[Reg.scala 17:{22,22}]
    node lut_26 = asSInt(UInt<9>("h2f")) @[logarithm.scala 60:19 61:9]
    node _GEN_38 = mux(eq(UInt<5>("h1a"), _data3In1_T), lut_26, _GEN_37) @[Reg.scala 17:{22,22}]
    node lut_27 = asSInt(UInt<9>("h31")) @[logarithm.scala 60:19 61:9]
    node _GEN_39 = mux(eq(UInt<5>("h1b"), _data3In1_T), lut_27, _GEN_38) @[Reg.scala 17:{22,22}]
    node lut_28 = asSInt(UInt<9>("h33")) @[logarithm.scala 60:19 61:9]
    node _GEN_40 = mux(eq(UInt<5>("h1c"), _data3In1_T), lut_28, _GEN_39) @[Reg.scala 17:{22,22}]
    node lut_29 = asSInt(UInt<9>("h34")) @[logarithm.scala 60:19 61:9]
    node _GEN_41 = mux(eq(UInt<5>("h1d"), _data3In1_T), lut_29, _GEN_40) @[Reg.scala 17:{22,22}]
    node lut_30 = asSInt(UInt<9>("h36")) @[logarithm.scala 60:19 61:9]
    node _GEN_42 = mux(eq(UInt<5>("h1e"), _data3In1_T), lut_30, _GEN_41) @[Reg.scala 17:{22,22}]
    node lut_31 = asSInt(UInt<9>("h38")) @[logarithm.scala 60:19 61:9]
    node _GEN_43 = mux(eq(UInt<5>("h1f"), _data3In1_T), lut_31, _GEN_42) @[Reg.scala 17:{22,22}]
    node lut_32 = asSInt(UInt<9>("h39")) @[logarithm.scala 60:19 61:9]
    node _GEN_44 = mux(eq(UInt<6>("h20"), _data3In1_T), lut_32, _GEN_43) @[Reg.scala 17:{22,22}]
    node lut_33 = asSInt(UInt<9>("h3b")) @[logarithm.scala 60:19 61:9]
    node _GEN_45 = mux(eq(UInt<6>("h21"), _data3In1_T), lut_33, _GEN_44) @[Reg.scala 17:{22,22}]
    node lut_34 = asSInt(UInt<9>("h3c")) @[logarithm.scala 60:19 61:9]
    node _GEN_46 = mux(eq(UInt<6>("h22"), _data3In1_T), lut_34, _GEN_45) @[Reg.scala 17:{22,22}]
    node lut_35 = asSInt(UInt<9>("h3e")) @[logarithm.scala 60:19 61:9]
    node _GEN_47 = mux(eq(UInt<6>("h23"), _data3In1_T), lut_35, _GEN_46) @[Reg.scala 17:{22,22}]
    node lut_36 = asSInt(UInt<9>("h3f")) @[logarithm.scala 60:19 61:9]
    node _GEN_48 = mux(eq(UInt<6>("h24"), _data3In1_T), lut_36, _GEN_47) @[Reg.scala 17:{22,22}]
    node lut_37 = asSInt(UInt<9>("h41")) @[logarithm.scala 60:19 61:9]
    node _GEN_49 = mux(eq(UInt<6>("h25"), _data3In1_T), lut_37, _GEN_48) @[Reg.scala 17:{22,22}]
    node lut_38 = asSInt(UInt<9>("h43")) @[logarithm.scala 60:19 61:9]
    node _GEN_50 = mux(eq(UInt<6>("h26"), _data3In1_T), lut_38, _GEN_49) @[Reg.scala 17:{22,22}]
    node lut_39 = asSInt(UInt<9>("h44")) @[logarithm.scala 60:19 61:9]
    node _GEN_51 = mux(eq(UInt<6>("h27"), _data3In1_T), lut_39, _GEN_50) @[Reg.scala 17:{22,22}]
    node lut_40 = asSInt(UInt<9>("h46")) @[logarithm.scala 60:19 61:9]
    node _GEN_52 = mux(eq(UInt<6>("h28"), _data3In1_T), lut_40, _GEN_51) @[Reg.scala 17:{22,22}]
    node lut_41 = asSInt(UInt<9>("h47")) @[logarithm.scala 60:19 61:9]
    node _GEN_53 = mux(eq(UInt<6>("h29"), _data3In1_T), lut_41, _GEN_52) @[Reg.scala 17:{22,22}]
    node lut_42 = asSInt(UInt<9>("h49")) @[logarithm.scala 60:19 61:9]
    node _GEN_54 = mux(eq(UInt<6>("h2a"), _data3In1_T), lut_42, _GEN_53) @[Reg.scala 17:{22,22}]
    node lut_43 = asSInt(UInt<9>("h4a")) @[logarithm.scala 60:19 61:9]
    node _GEN_55 = mux(eq(UInt<6>("h2b"), _data3In1_T), lut_43, _GEN_54) @[Reg.scala 17:{22,22}]
    node lut_44 = asSInt(UInt<9>("h4c")) @[logarithm.scala 60:19 61:9]
    node _GEN_56 = mux(eq(UInt<6>("h2c"), _data3In1_T), lut_44, _GEN_55) @[Reg.scala 17:{22,22}]
    node lut_45 = asSInt(UInt<9>("h4d")) @[logarithm.scala 60:19 61:9]
    node _GEN_57 = mux(eq(UInt<6>("h2d"), _data3In1_T), lut_45, _GEN_56) @[Reg.scala 17:{22,22}]
    node lut_46 = asSInt(UInt<9>("h4f")) @[logarithm.scala 60:19 61:9]
    node _GEN_58 = mux(eq(UInt<6>("h2e"), _data3In1_T), lut_46, _GEN_57) @[Reg.scala 17:{22,22}]
    node lut_47 = asSInt(UInt<9>("h50")) @[logarithm.scala 60:19 61:9]
    node _GEN_59 = mux(eq(UInt<6>("h2f"), _data3In1_T), lut_47, _GEN_58) @[Reg.scala 17:{22,22}]
    node lut_48 = asSInt(UInt<9>("h52")) @[logarithm.scala 60:19 61:9]
    node _GEN_60 = mux(eq(UInt<6>("h30"), _data3In1_T), lut_48, _GEN_59) @[Reg.scala 17:{22,22}]
    node lut_49 = asSInt(UInt<9>("h53")) @[logarithm.scala 60:19 61:9]
    node _GEN_61 = mux(eq(UInt<6>("h31"), _data3In1_T), lut_49, _GEN_60) @[Reg.scala 17:{22,22}]
    node lut_50 = asSInt(UInt<9>("h54")) @[logarithm.scala 60:19 61:9]
    node _GEN_62 = mux(eq(UInt<6>("h32"), _data3In1_T), lut_50, _GEN_61) @[Reg.scala 17:{22,22}]
    node lut_51 = asSInt(UInt<9>("h56")) @[logarithm.scala 60:19 61:9]
    node _GEN_63 = mux(eq(UInt<6>("h33"), _data3In1_T), lut_51, _GEN_62) @[Reg.scala 17:{22,22}]
    node lut_52 = asSInt(UInt<9>("h57")) @[logarithm.scala 60:19 61:9]
    node _GEN_64 = mux(eq(UInt<6>("h34"), _data3In1_T), lut_52, _GEN_63) @[Reg.scala 17:{22,22}]
    node lut_53 = asSInt(UInt<9>("h59")) @[logarithm.scala 60:19 61:9]
    node _GEN_65 = mux(eq(UInt<6>("h35"), _data3In1_T), lut_53, _GEN_64) @[Reg.scala 17:{22,22}]
    node lut_54 = asSInt(UInt<9>("h5a")) @[logarithm.scala 60:19 61:9]
    node _GEN_66 = mux(eq(UInt<6>("h36"), _data3In1_T), lut_54, _GEN_65) @[Reg.scala 17:{22,22}]
    node lut_55 = asSInt(UInt<9>("h5c")) @[logarithm.scala 60:19 61:9]
    node _GEN_67 = mux(eq(UInt<6>("h37"), _data3In1_T), lut_55, _GEN_66) @[Reg.scala 17:{22,22}]
    node lut_56 = asSInt(UInt<9>("h5d")) @[logarithm.scala 60:19 61:9]
    node _GEN_68 = mux(eq(UInt<6>("h38"), _data3In1_T), lut_56, _GEN_67) @[Reg.scala 17:{22,22}]
    node lut_57 = asSInt(UInt<9>("h5e")) @[logarithm.scala 60:19 61:9]
    node _GEN_69 = mux(eq(UInt<6>("h39"), _data3In1_T), lut_57, _GEN_68) @[Reg.scala 17:{22,22}]
    node lut_58 = asSInt(UInt<9>("h60")) @[logarithm.scala 60:19 61:9]
    node _GEN_70 = mux(eq(UInt<6>("h3a"), _data3In1_T), lut_58, _GEN_69) @[Reg.scala 17:{22,22}]
    node lut_59 = asSInt(UInt<9>("h61")) @[logarithm.scala 60:19 61:9]
    node _GEN_71 = mux(eq(UInt<6>("h3b"), _data3In1_T), lut_59, _GEN_70) @[Reg.scala 17:{22,22}]
    node lut_60 = asSInt(UInt<9>("h62")) @[logarithm.scala 60:19 61:9]
    node _GEN_72 = mux(eq(UInt<6>("h3c"), _data3In1_T), lut_60, _GEN_71) @[Reg.scala 17:{22,22}]
    node lut_61 = asSInt(UInt<9>("h64")) @[logarithm.scala 60:19 61:9]
    node _GEN_73 = mux(eq(UInt<6>("h3d"), _data3In1_T), lut_61, _GEN_72) @[Reg.scala 17:{22,22}]
    node lut_62 = asSInt(UInt<9>("h65")) @[logarithm.scala 60:19 61:9]
    node _GEN_74 = mux(eq(UInt<6>("h3e"), _data3In1_T), lut_62, _GEN_73) @[Reg.scala 17:{22,22}]
    node lut_63 = asSInt(UInt<9>("h66")) @[logarithm.scala 60:19 61:9]
    node _GEN_75 = mux(eq(UInt<6>("h3f"), _data3In1_T), lut_63, _GEN_74) @[Reg.scala 17:{22,22}]
    node lut_64 = asSInt(UInt<9>("h68")) @[logarithm.scala 60:19 61:9]
    node _GEN_76 = mux(eq(UInt<7>("h40"), _data3In1_T), lut_64, _GEN_75) @[Reg.scala 17:{22,22}]
    node lut_65 = asSInt(UInt<9>("h69")) @[logarithm.scala 60:19 61:9]
    node _GEN_77 = mux(eq(UInt<7>("h41"), _data3In1_T), lut_65, _GEN_76) @[Reg.scala 17:{22,22}]
    node lut_66 = asSInt(UInt<9>("h6a")) @[logarithm.scala 60:19 61:9]
    node _GEN_78 = mux(eq(UInt<7>("h42"), _data3In1_T), lut_66, _GEN_77) @[Reg.scala 17:{22,22}]
    node lut_67 = asSInt(UInt<9>("h6c")) @[logarithm.scala 60:19 61:9]
    node _GEN_79 = mux(eq(UInt<7>("h43"), _data3In1_T), lut_67, _GEN_78) @[Reg.scala 17:{22,22}]
    node lut_68 = asSInt(UInt<9>("h6d")) @[logarithm.scala 60:19 61:9]
    node _GEN_80 = mux(eq(UInt<7>("h44"), _data3In1_T), lut_68, _GEN_79) @[Reg.scala 17:{22,22}]
    node lut_69 = asSInt(UInt<9>("h6e")) @[logarithm.scala 60:19 61:9]
    node _GEN_81 = mux(eq(UInt<7>("h45"), _data3In1_T), lut_69, _GEN_80) @[Reg.scala 17:{22,22}]
    node lut_70 = asSInt(UInt<9>("h70")) @[logarithm.scala 60:19 61:9]
    node _GEN_82 = mux(eq(UInt<7>("h46"), _data3In1_T), lut_70, _GEN_81) @[Reg.scala 17:{22,22}]
    node lut_71 = asSInt(UInt<9>("h71")) @[logarithm.scala 60:19 61:9]
    node _GEN_83 = mux(eq(UInt<7>("h47"), _data3In1_T), lut_71, _GEN_82) @[Reg.scala 17:{22,22}]
    node lut_72 = asSInt(UInt<9>("h72")) @[logarithm.scala 60:19 61:9]
    node _GEN_84 = mux(eq(UInt<7>("h48"), _data3In1_T), lut_72, _GEN_83) @[Reg.scala 17:{22,22}]
    node lut_73 = asSInt(UInt<9>("h74")) @[logarithm.scala 60:19 61:9]
    node _GEN_85 = mux(eq(UInt<7>("h49"), _data3In1_T), lut_73, _GEN_84) @[Reg.scala 17:{22,22}]
    node lut_74 = asSInt(UInt<9>("h75")) @[logarithm.scala 60:19 61:9]
    node _GEN_86 = mux(eq(UInt<7>("h4a"), _data3In1_T), lut_74, _GEN_85) @[Reg.scala 17:{22,22}]
    node lut_75 = asSInt(UInt<9>("h76")) @[logarithm.scala 60:19 61:9]
    node _GEN_87 = mux(eq(UInt<7>("h4b"), _data3In1_T), lut_75, _GEN_86) @[Reg.scala 17:{22,22}]
    node lut_76 = asSInt(UInt<9>("h77")) @[logarithm.scala 60:19 61:9]
    node _GEN_88 = mux(eq(UInt<7>("h4c"), _data3In1_T), lut_76, _GEN_87) @[Reg.scala 17:{22,22}]
    node lut_77 = asSInt(UInt<9>("h79")) @[logarithm.scala 60:19 61:9]
    node _GEN_89 = mux(eq(UInt<7>("h4d"), _data3In1_T), lut_77, _GEN_88) @[Reg.scala 17:{22,22}]
    node lut_78 = asSInt(UInt<9>("h7a")) @[logarithm.scala 60:19 61:9]
    node _GEN_90 = mux(eq(UInt<7>("h4e"), _data3In1_T), lut_78, _GEN_89) @[Reg.scala 17:{22,22}]
    node lut_79 = asSInt(UInt<9>("h7b")) @[logarithm.scala 60:19 61:9]
    node _GEN_91 = mux(eq(UInt<7>("h4f"), _data3In1_T), lut_79, _GEN_90) @[Reg.scala 17:{22,22}]
    node lut_80 = asSInt(UInt<9>("h7c")) @[logarithm.scala 60:19 61:9]
    node _GEN_92 = mux(eq(UInt<7>("h50"), _data3In1_T), lut_80, _GEN_91) @[Reg.scala 17:{22,22}]
    node lut_81 = asSInt(UInt<9>("h7e")) @[logarithm.scala 60:19 61:9]
    node _GEN_93 = mux(eq(UInt<7>("h51"), _data3In1_T), lut_81, _GEN_92) @[Reg.scala 17:{22,22}]
    node lut_82 = asSInt(UInt<9>("h7f")) @[logarithm.scala 60:19 61:9]
    node _GEN_94 = mux(eq(UInt<7>("h52"), _data3In1_T), lut_82, _GEN_93) @[Reg.scala 17:{22,22}]
    node lut_83 = asSInt(UInt<9>("h80")) @[logarithm.scala 60:19 61:9]
    node _GEN_95 = mux(eq(UInt<7>("h53"), _data3In1_T), lut_83, _GEN_94) @[Reg.scala 17:{22,22}]
    node lut_84 = asSInt(UInt<9>("h81")) @[logarithm.scala 60:19 61:9]
    node _GEN_96 = mux(eq(UInt<7>("h54"), _data3In1_T), lut_84, _GEN_95) @[Reg.scala 17:{22,22}]
    node lut_85 = asSInt(UInt<9>("h82")) @[logarithm.scala 60:19 61:9]
    node _GEN_97 = mux(eq(UInt<7>("h55"), _data3In1_T), lut_85, _GEN_96) @[Reg.scala 17:{22,22}]
    node lut_86 = asSInt(UInt<9>("h84")) @[logarithm.scala 60:19 61:9]
    node _GEN_98 = mux(eq(UInt<7>("h56"), _data3In1_T), lut_86, _GEN_97) @[Reg.scala 17:{22,22}]
    node lut_87 = asSInt(UInt<9>("h85")) @[logarithm.scala 60:19 61:9]
    node _GEN_99 = mux(eq(UInt<7>("h57"), _data3In1_T), lut_87, _GEN_98) @[Reg.scala 17:{22,22}]
    node lut_88 = asSInt(UInt<9>("h86")) @[logarithm.scala 60:19 61:9]
    node _GEN_100 = mux(eq(UInt<7>("h58"), _data3In1_T), lut_88, _GEN_99) @[Reg.scala 17:{22,22}]
    node lut_89 = asSInt(UInt<9>("h87")) @[logarithm.scala 60:19 61:9]
    node _GEN_101 = mux(eq(UInt<7>("h59"), _data3In1_T), lut_89, _GEN_100) @[Reg.scala 17:{22,22}]
    node lut_90 = asSInt(UInt<9>("h88")) @[logarithm.scala 60:19 61:9]
    node _GEN_102 = mux(eq(UInt<7>("h5a"), _data3In1_T), lut_90, _GEN_101) @[Reg.scala 17:{22,22}]
    node lut_91 = asSInt(UInt<9>("h89")) @[logarithm.scala 60:19 61:9]
    node _GEN_103 = mux(eq(UInt<7>("h5b"), _data3In1_T), lut_91, _GEN_102) @[Reg.scala 17:{22,22}]
    node lut_92 = asSInt(UInt<9>("h8b")) @[logarithm.scala 60:19 61:9]
    node _GEN_104 = mux(eq(UInt<7>("h5c"), _data3In1_T), lut_92, _GEN_103) @[Reg.scala 17:{22,22}]
    node lut_93 = asSInt(UInt<9>("h8c")) @[logarithm.scala 60:19 61:9]
    node _GEN_105 = mux(eq(UInt<7>("h5d"), _data3In1_T), lut_93, _GEN_104) @[Reg.scala 17:{22,22}]
    node lut_94 = asSInt(UInt<9>("h8d")) @[logarithm.scala 60:19 61:9]
    node _GEN_106 = mux(eq(UInt<7>("h5e"), _data3In1_T), lut_94, _GEN_105) @[Reg.scala 17:{22,22}]
    node lut_95 = asSInt(UInt<9>("h8e")) @[logarithm.scala 60:19 61:9]
    node _GEN_107 = mux(eq(UInt<7>("h5f"), _data3In1_T), lut_95, _GEN_106) @[Reg.scala 17:{22,22}]
    node lut_96 = asSInt(UInt<9>("h8f")) @[logarithm.scala 60:19 61:9]
    node _GEN_108 = mux(eq(UInt<7>("h60"), _data3In1_T), lut_96, _GEN_107) @[Reg.scala 17:{22,22}]
    node lut_97 = asSInt(UInt<9>("h90")) @[logarithm.scala 60:19 61:9]
    node _GEN_109 = mux(eq(UInt<7>("h61"), _data3In1_T), lut_97, _GEN_108) @[Reg.scala 17:{22,22}]
    node lut_98 = asSInt(UInt<9>("h92")) @[logarithm.scala 60:19 61:9]
    node _GEN_110 = mux(eq(UInt<7>("h62"), _data3In1_T), lut_98, _GEN_109) @[Reg.scala 17:{22,22}]
    node lut_99 = asSInt(UInt<9>("h93")) @[logarithm.scala 60:19 61:9]
    node _GEN_111 = mux(eq(UInt<7>("h63"), _data3In1_T), lut_99, _GEN_110) @[Reg.scala 17:{22,22}]
    node lut_100 = asSInt(UInt<9>("h94")) @[logarithm.scala 60:19 61:9]
    node _GEN_112 = mux(eq(UInt<7>("h64"), _data3In1_T), lut_100, _GEN_111) @[Reg.scala 17:{22,22}]
    node lut_101 = asSInt(UInt<9>("h95")) @[logarithm.scala 60:19 61:9]
    node _GEN_113 = mux(eq(UInt<7>("h65"), _data3In1_T), lut_101, _GEN_112) @[Reg.scala 17:{22,22}]
    node lut_102 = asSInt(UInt<9>("h96")) @[logarithm.scala 60:19 61:9]
    node _GEN_114 = mux(eq(UInt<7>("h66"), _data3In1_T), lut_102, _GEN_113) @[Reg.scala 17:{22,22}]
    node lut_103 = asSInt(UInt<9>("h97")) @[logarithm.scala 60:19 61:9]
    node _GEN_115 = mux(eq(UInt<7>("h67"), _data3In1_T), lut_103, _GEN_114) @[Reg.scala 17:{22,22}]
    node lut_104 = asSInt(UInt<9>("h98")) @[logarithm.scala 60:19 61:9]
    node _GEN_116 = mux(eq(UInt<7>("h68"), _data3In1_T), lut_104, _GEN_115) @[Reg.scala 17:{22,22}]
    node lut_105 = asSInt(UInt<9>("h99")) @[logarithm.scala 60:19 61:9]
    node _GEN_117 = mux(eq(UInt<7>("h69"), _data3In1_T), lut_105, _GEN_116) @[Reg.scala 17:{22,22}]
    node lut_106 = asSInt(UInt<9>("h9a")) @[logarithm.scala 60:19 61:9]
    node _GEN_118 = mux(eq(UInt<7>("h6a"), _data3In1_T), lut_106, _GEN_117) @[Reg.scala 17:{22,22}]
    node lut_107 = asSInt(UInt<9>("h9c")) @[logarithm.scala 60:19 61:9]
    node _GEN_119 = mux(eq(UInt<7>("h6b"), _data3In1_T), lut_107, _GEN_118) @[Reg.scala 17:{22,22}]
    node lut_108 = asSInt(UInt<9>("h9d")) @[logarithm.scala 60:19 61:9]
    node _GEN_120 = mux(eq(UInt<7>("h6c"), _data3In1_T), lut_108, _GEN_119) @[Reg.scala 17:{22,22}]
    node lut_109 = asSInt(UInt<9>("h9e")) @[logarithm.scala 60:19 61:9]
    node _GEN_121 = mux(eq(UInt<7>("h6d"), _data3In1_T), lut_109, _GEN_120) @[Reg.scala 17:{22,22}]
    node lut_110 = asSInt(UInt<9>("h9f")) @[logarithm.scala 60:19 61:9]
    node _GEN_122 = mux(eq(UInt<7>("h6e"), _data3In1_T), lut_110, _GEN_121) @[Reg.scala 17:{22,22}]
    node lut_111 = asSInt(UInt<9>("ha0")) @[logarithm.scala 60:19 61:9]
    node _GEN_123 = mux(eq(UInt<7>("h6f"), _data3In1_T), lut_111, _GEN_122) @[Reg.scala 17:{22,22}]
    node lut_112 = asSInt(UInt<9>("ha1")) @[logarithm.scala 60:19 61:9]
    node _GEN_124 = mux(eq(UInt<7>("h70"), _data3In1_T), lut_112, _GEN_123) @[Reg.scala 17:{22,22}]
    node lut_113 = asSInt(UInt<9>("ha2")) @[logarithm.scala 60:19 61:9]
    node _GEN_125 = mux(eq(UInt<7>("h71"), _data3In1_T), lut_113, _GEN_124) @[Reg.scala 17:{22,22}]
    node lut_114 = asSInt(UInt<9>("ha3")) @[logarithm.scala 60:19 61:9]
    node _GEN_126 = mux(eq(UInt<7>("h72"), _data3In1_T), lut_114, _GEN_125) @[Reg.scala 17:{22,22}]
    node lut_115 = asSInt(UInt<9>("ha4")) @[logarithm.scala 60:19 61:9]
    node _GEN_127 = mux(eq(UInt<7>("h73"), _data3In1_T), lut_115, _GEN_126) @[Reg.scala 17:{22,22}]
    node lut_116 = asSInt(UInt<9>("ha5")) @[logarithm.scala 60:19 61:9]
    node _GEN_128 = mux(eq(UInt<7>("h74"), _data3In1_T), lut_116, _GEN_127) @[Reg.scala 17:{22,22}]
    node lut_117 = asSInt(UInt<9>("ha6")) @[logarithm.scala 60:19 61:9]
    node _GEN_129 = mux(eq(UInt<7>("h75"), _data3In1_T), lut_117, _GEN_128) @[Reg.scala 17:{22,22}]
    node lut_118 = asSInt(UInt<9>("ha7")) @[logarithm.scala 60:19 61:9]
    node _GEN_130 = mux(eq(UInt<7>("h76"), _data3In1_T), lut_118, _GEN_129) @[Reg.scala 17:{22,22}]
    node lut_119 = asSInt(UInt<9>("ha8")) @[logarithm.scala 60:19 61:9]
    node _GEN_131 = mux(eq(UInt<7>("h77"), _data3In1_T), lut_119, _GEN_130) @[Reg.scala 17:{22,22}]
    node lut_120 = asSInt(UInt<9>("ha9")) @[logarithm.scala 60:19 61:9]
    node _GEN_132 = mux(eq(UInt<7>("h78"), _data3In1_T), lut_120, _GEN_131) @[Reg.scala 17:{22,22}]
    node lut_121 = asSInt(UInt<9>("haa")) @[logarithm.scala 60:19 61:9]
    node _GEN_133 = mux(eq(UInt<7>("h79"), _data3In1_T), lut_121, _GEN_132) @[Reg.scala 17:{22,22}]
    node lut_122 = asSInt(UInt<9>("hab")) @[logarithm.scala 60:19 61:9]
    node _GEN_134 = mux(eq(UInt<7>("h7a"), _data3In1_T), lut_122, _GEN_133) @[Reg.scala 17:{22,22}]
    node lut_123 = asSInt(UInt<9>("hac")) @[logarithm.scala 60:19 61:9]
    node _GEN_135 = mux(eq(UInt<7>("h7b"), _data3In1_T), lut_123, _GEN_134) @[Reg.scala 17:{22,22}]
    node lut_124 = asSInt(UInt<9>("had")) @[logarithm.scala 60:19 61:9]
    node _GEN_136 = mux(eq(UInt<7>("h7c"), _data3In1_T), lut_124, _GEN_135) @[Reg.scala 17:{22,22}]
    node lut_125 = asSInt(UInt<9>("hae")) @[logarithm.scala 60:19 61:9]
    node _GEN_137 = mux(eq(UInt<7>("h7d"), _data3In1_T), lut_125, _GEN_136) @[Reg.scala 17:{22,22}]
    node lut_126 = asSInt(UInt<9>("haf")) @[logarithm.scala 60:19 61:9]
    node _GEN_138 = mux(eq(UInt<7>("h7e"), _data3In1_T), lut_126, _GEN_137) @[Reg.scala 17:{22,22}]
    node lut_127 = asSInt(UInt<9>("hb0")) @[logarithm.scala 60:19 61:9]
    node _GEN_139 = mux(eq(UInt<7>("h7f"), _data3In1_T), lut_127, _GEN_138) @[Reg.scala 17:{22,22}]
    node _lut_data3In1_T = _GEN_139 @[Reg.scala 17:22]
    node _GEN_140 = mux(hsk.regen_2, _lut_data3In1_T, data3In1_0) @[Reg.scala 16:16 17:{18,22}]
    node _data3In2_T = asSInt(data2Count_0) @[logarithm.scala 64:96]
    node _data3In2_T_1 = mul(asSInt(UInt<9>("hb1")), _data3In2_T) @[logarithm.scala 64:81]
    reg data3In2_0 : SInt<13>, clock with :
      reset => (UInt<1>("h0"), data3In2_0) @[Reg.scala 16:16]
    node _GEN_141 = mux(hsk.regen_2, _data3In2_T_1, data3In2_0) @[Reg.scala 16:16 17:{18,22}]
    node _data4_T = add(data3In1_0, data3In2_0) @[logarithm.scala 66:71]
    node _data4_T_1 = tail(_data4_T, 1) @[logarithm.scala 66:71]
    node _data4_T_2 = asSInt(_data4_T_1) @[logarithm.scala 66:71]
    reg data4_0 : SInt<13>, clock with :
      reset => (UInt<1>("h0"), data4_0) @[Reg.scala 16:16]
    node _GEN_142 = mux(hsk.regen_3, _data4_T_2, data4_0) @[Reg.scala 16:16 17:{18,22}]
    io_input_ready <= hsk.readyPre @[logarithm.scala 28:20]
    io_output_valid <= hsk.validNxt @[logarithm.scala 30:21]
    io_output_bits_out_0 <= asSInt(bits(data4_0, 11, 0)) @[logarithm.scala 67:24]
    io_output_bits_last <= hsk.lastNxt @[logarithm.scala 32:25]
    hsk.clock <= clock
    hsk.reset <= reset
    hsk.validPre <= io_input_valid @[logarithm.scala 27:18]
    hsk.lastPre <= io_input_bits_last @[logarithm.scala 29:17]
    hsk.readyNxt <= io_output_ready @[logarithm.scala 31:18]
    hsk.rst <= rst @[logarithm.scala 33:13]
    data1Lod_0_0 <= _GEN_0
    data1Lod_0_1 <= _GEN_1
    data1Lod_0_2 <= _GEN_2
    data1Lod_0_3 <= _GEN_3
    data1Lod_0_4 <= _GEN_4
    data1Lod_0_5 <= _GEN_5
    data1Lod_0_6 <= _GEN_6
    data1Lod_0_7 <= _GEN_7
    data1Lod_0_8 <= _GEN_8
    data1In_0 <= _GEN_9
    data2In_0 <= _GEN_10
    data2Count_0 <= _GEN_11
    data3In1_0 <= _GEN_140
    data3In2_0 <= _GEN_141
    data4_0 <= _GEN_142
