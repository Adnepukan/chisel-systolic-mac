$date
2024-01-13T12:26+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module PE $end
 $var wire 1 ( multiply_io_input_io_sumIn_valid $end
 $var wire 1 0 multiply_io_input_io_sumOut_bits_last $end
 $var wire 1 ? adderInHsk $end
 $var wire 1 A multiply_io_input_io_sumOut_ready $end
 $var wire 1 O multiply $end
 $var wire 8 T multiply_io_input_io_actWeiIn_bits_x_0 $end
 $var wire 1 [ multiply_io_input_io_weiEn $end
 $var wire 1 a multiply_io_input_io_actWeiIn_bits_last $end
 $var wire 2 g multiply_io_input_io_statSel $end
 $var wire 16 i multiply_io_input_io_sumIn_bits_x_0 $end
 $var wire 1 j multiply_io_input_io_sumIn_ready $end
 $var wire 1 n clock $end
 $var wire 1 u multiplyOutMux $end
 $var wire 1 v multiply_io_input_io_actWeiIn_valid $end
 $var wire 1 "" sumOutMux $end
 $var wire 8 "& weiOut $end
 $var wire 1 "4 accumulator $end
 $var wire 1 "9 adder $end
 $var wire 1 "< reset $end
 $var wire 1 "= multiply_io_input_io_sumOut_valid $end
 $var wire 1 "C multiply_io_input_io_actWeiIn_ready $end
 $var wire 1 "D multiply_io_input_io_sumIn_bits_last $end
 $var wire 8 "E multiply_io_input_io_actWeiIn_bits_x_1 $end
 $var wire 1 "G multiply_io_input_io_actEn $end
 $var wire 16 "M multiply_io_input_io_sumOut_bits_x_0 $end
  $scope module accumulator $end
   $var wire 16 / io_output_bits_x_0_r $end
   $var wire 1 4 io_input_ready $end
   $var wire 16 : sumNxt $end
   $var wire 1 C io_output_bits_last $end
   $var wire 1 ^ reset $end
   $var wire 1 b io_input_bits_last $end
   $var wire 1 t io_input_valid $end
   $var wire 16 "/ io_output_bits_x_0 $end
   $var wire 1 "2 io_output_bits_last_r $end
   $var wire 16 "7 io_input_bits_x_0 $end
   $var wire 1 "B clock $end
   $var wire 1 "L io_output_valid $end
  $upscope $end
  $scope module adder.hsk $end
  $upscope $end
  $scope module adderInHsk $end
   $var wire 1 = io_input_1_ready $end
   $var wire 1 N io_input_0_ready $end
   $var wire 16 S io_input_1_bits_x_0 $end
   $var wire 1 ] io_input_1_bits_last $end
   $var wire 16 d io_input_0_bits_x_0 $end
   $var wire 1 w io_output_valid $end
   $var wire 16 z io_output_bits_0_x_0 $end
   $var wire 1 ~ io_input_1_valid $end
   $var wire 16 ", io_output_bits_1_x_0 $end
   $var wire 1 "3 io_input_0_valid $end
   $var wire 1 "F io_output_ready $end
   $var wire 1 "K io_output_bits_1_last $end
  $upscope $end
  $scope module multiply.counterHsk $end
  $upscope $end
  $scope module adder $end
   $var wire 16 $ io_output_bits_x_0 $end
   $var wire 1 > clock $end
   $var wire 1 I io_input_valid $end
   $var wire 1 R io_output_valid $end
   $var wire 16 U io_input_bits_x_1 $end
   $var wire 16 W r_0 $end
   $var wire 1 ` reset $end
   $var wire 1 o io_input_ready $end
   $var wire 16 q sum_0 $end
   $var wire 1 } io_output_ready $end
   $var wire 1 "$ hsk $end
   $var wire 1 ") io_output_bits_last $end
   $var wire 16 "+ io_input_bits_x_0 $end
   $var wire 1 ": io_input_bits_last $end
    $scope module hsk $end
     $var wire 1 " io_regen_0 $end
     $var wire 1 + io_lastPre $end
     $var wire 1 1 last_1_r $end
     $var wire 1 5 ready_1 $end
     $var wire 1 7 clock $end
     $var wire 1 < last_1 $end
     $var wire 1 G valid_1_r $end
     $var wire 1 L io_readyNxt $end
     $var wire 1 M ready_0 $end
     $var wire 1 Q last_0 $end
     $var wire 1 h io_lastNxt $end
     $var wire 1 p valid_1 $end
     $var wire 1 r io_validNxt $end
     $var wire 1 x reset $end
     $var wire 1 "0 io_readyPre $end
     $var wire 1 "A valid_0 $end
     $var wire 1 "I io_validPre $end
    $upscope $end
  $upscope $end
  $scope module sumOutMux $end
   $var wire 1 ! io_sel $end
   $var wire 1 # io_input_1_valid $end
   $var wire 1 ) io_output_valid $end
   $var wire 1 H io_output_bits_last $end
   $var wire 1 X io_input_0_bits_last $end
   $var wire 1 Y io_input_0_valid $end
   $var wire 1 e io_input_1_bits_last $end
   $var wire 1 l io_output_ready $end
   $var wire 16 s io_output_bits_x_0 $end
   $var wire 16 { io_input_1_bits_x_0 $end
   $var wire 1 "% io_input_0_ready $end
   $var wire 16 "6 io_input_0_bits_x_0 $end
  $upscope $end
  $scope module multiplyOutMux $end
   $var wire 1 2 io_output_1_valid $end
   $var wire 1 9 readyVec_0 $end
   $var wire 16 B io_input_bits_x_0 $end
   $var wire 16 F io_output_1_bits_x_0 $end
   $var wire 1 J io_input_ready $end
   $var wire 1 \ io_output_0_valid $end
   $var wire 16 _ io_output_0_bits_x_0 $end
   $var wire 1 m io_output_1_ready $end
   $var wire 1 y io_output_1_bits_last $end
   $var wire 1 "' io_output_0_ready $end
   $var wire 1 "( readyVec_1 $end
   $var wire 1 "* io_input_valid $end
   $var wire 1 "5 io_input_bits_last $end
   $var wire 1 "; io_sel $end
  $upscope $end
  $scope module multiply $end
   $var wire 3 & out0IncMux $end
   $var wire 8 ' in0 $end
   $var wire 8 . io_input_bits_x_1 $end
   $var wire 16 3 out0 $end
   $var wire 1 6 io_input_ready $end
   $var wire 16 8 out0Inc $end
   $var wire 16 ; out0Nxt $end
   $var wire 1 D clock $end
   $var wire 8 K io_input_bits_x_0 $end
   $var wire 1 V io_output_valid $end
   $var wire 8 Z in1Inc $end
   $var wire 1 c io_output_bits_last $end
   $var wire 1 "! io_input_bits_last $end
   $var wire 1 "# reset $end
   $var wire 16 ". io_output_bits_x_0 $end
   $var wire 8 "1 in1 $end
   $var wire 1 "8 io_input_valid $end
   $var wire 1 "> io_output_ready $end
   $var wire 8 "? in0Nxt $end
   $var wire 1 "H counterHsk $end
    $scope module counterHsk $end
     $var wire 1 % io_lastNxt $end
     $var wire 3 * counterNxt $end
     $var wire 1 , io_lastNxt_r $end
     $var wire 1 - io_readyNxt $end
     $var wire 1 @ io_validNxt $end
     $var wire 1 E reset $end
     $var wire 1 P counterEn $end
     $var wire 1 f io_regen $end
     $var wire 1 k io_lastPre $end
     $var wire 1 | io_readyPre $end
     $var wire 1 "- io_validPre $end
     $var wire 3 "@ counter $end
     $var wire 1 "J clock $end
    $upscope $end
  $upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
0X
0C
0"L
0""
b000 *
0o
0R
0=
b0000000000000000 B
0V
0"J
b00000000 "&
0m
b0000000000000000 W
0"F
b0000000000000000 :
05
0")
0~
0a
0L
0D
0"#
b00000000 "1
0x
0[
0":
0)
0r
0]
0H
0"<
0@
0+
0%
b0000000000000000 {
0v
0"8
0p
0>
0"2
06
0!
0"4
b0000000000000000 q
0l
0"K
0O
0"C
0f
0Q
b00 g
0I
0"(
0`
0"*
b0000000000000000 3
0w
0b
0E
00
0"$
0(
0?
0"=
b0000000000000000 z
0u
b000 "@
b0000000000000000 ".
b00000000 "E
b0000000000000000 _
0"9
b00000000 "?
0"H
0"3
07
0"
b000 &
0k
b0000000000000000 ",
0N
09
0"-
b0000000000000000 U
0P
0e
0"D
b0000000000000000 8
0"'
b00000000 Z
0|
0J
0-
b00000000 T
b0000000000000000 "7
b0000000000000000 S
0c
0"B
01
0"%
b0000000000000000 d
0t
0">
0"!
0n
0Y
b0000000000000000 "/
0<
14
0j
0"I
b0000000000000000 "+
0M
0#
02
b0000000000000000 s
b00000000 '
0"0
b0000000000000000 $
0}
0h
0"G
b0000000000000000 ;
b0000000000000000 "6
b0000000000000000 "M
0"A
0y
b0000000000000000 i
0\
0G
0";
b0000000000000000 /
0^
b0000000000000000 F
0A
0,
0"5
b00000000 K
b00000000 .
$end
#0
1-
1`
1J
1"C
1o
16
1E
1x
1=
1"<
1j
1"'
1M
1N
1">
1"0
1"(
1"F
b001 *
19
1"#
1^
1m
1|
#1
1"B
1D
1"J
17
1>
1n
#6
0`
0"B
0D
0E
0x
0"#
0"J
0^
0"<
07
0>
0n
#11
1"B
1D
1"J
17
1>
1n
#16
0"B
0D
0"J
07
0>
0n
#21
1"B
1D
1"J
17
1>
1n
#26
0"B
0D
0"J
07
0>
0n
#31
1"B
1D
1"J
17
1>
1n
#36
0"B
0D
0"J
07
0>
0n
#41
1"B
1D
1"J
17
1>
1n
#46
0"B
0D
0"J
07
0>
0n
#51
1"B
1D
1"J
17
1>
1n
#56
0"B
0D
0"J
07
0>
0n
#61
1"B
1D
1"J
17
1>
1n
#66
0"B
0D
0"J
07
0>
0n
#71
1"B
1D
1"J
17
1>
1n
#76
0"B
0D
0"J
07
0>
0n
#81
1"B
1D
1"J
17
1>
1n
#86
0"B
0D
0"J
07
0>
0n
#91
1"B
1D
1"J
17
1>
1n
#96
0"B
0D
0"J
07
0>
0n
#101
1"B
1D
1"J
17
1>
1n
#106
1f
1Q
b0000110100000000 ",
0"B
1}
1"%
15
b0000110100000000 S
b10110000 K
1~
b0000110100000000 i
1a
1L
07
0j
1"!
b11000000 "?
1]
1"8
1+
1A
1":
1v
b01100000 .
b101 &
0D
b01100000 Z
0"J
0=
1"-
1(
1"K
0>
b0000110100000000 q
b10110000 T
1"D
b0000110100000000 U
b01100000 "E
b1111111110100000 8
1k
1l
1P
b1111111110100000 ;
0n
#111
b1111111110100000 "+
b1111111110100000 3
b1111111110100000 B
b001 "@
b1111111000100000 ;
1"B
b110 &
1D
0"C
b11000000 '
06
1"J
17
1>
b1111111110100000 ".
b0000110010100000 q
b1111111110100000 F
b1111111110100000 d
b00000000 "?
b1111111110100000 "7
b1111111110100000 z
b01100000 "1
b010 *
b1111111110100000 :
0|
b1111111110100000 _
1n
#116
0"B
0D
0"J
07
0>
0n
#121
b1111111000100000 "+
b1111111000100000 3
b1111111000100000 B
b010 "@
b1111100010000000 ;
1"B
b000 &
1D
b00000000 '
1"J
17
1>
b1111111000100000 ".
b0000101100100000 q
b1111111000100000 F
b1111111000100000 d
b0000000000000000 8
b1111111000100000 "7
b1111111000100000 z
b011 *
b1111111000100000 :
b1111111000100000 _
1n
#126
0"B
0D
0"J
07
0>
0n
#131
b1111100010000000 "+
b1111100010000000 3
b1111100010000000 B
b011 "@
b1110001000000000 ;
1"B
1D
1"J
17
1>
b1111100010000000 ".
b0000010110000000 q
b1111100010000000 F
b1111100010000000 d
b1111100010000000 "7
b1111100010000000 z
b100 *
b1111100010000000 :
b1111100010000000 _
1n
#136
0"B
0D
0"J
07
0>
0n
#141
1n
b1110001000000000 3
b1111111110100000 ;
1"A
1"B
1"C
16
17
1j
b1110001000000000 F
b1110001000000000 d
b11000000 "?
b1110001000000000 "7
b1110001000000000 z
b001 *
1I
1|
b1110001000000000 _
b1110001000000000 B
1"3
b101 &
1D
1w
1"I
1"J
1=
1>
b1110001000000000 ".
b1110111100000000 q
1\
1"
1@
b1111111110100000 8
1V
b1110001000000000 :
1"*
b100 "@
b1110001000000000 "+
#146
0"B
0D
0"J
07
0>
0n
#151
1n
1<
1"B
1h
06
0j
1b
10
b1110111100000000 "6
b1111111110100000 d
1y
1G
b010 *
b1110111100000000 "M
0I
1,
1X
b110 &
0"I
0w
0=
b1111111110100000 ".
b0000110010100000 q
0\
0"
b1110111100000000 s
0V
b1110111100000000 $
0"*
b1111111000100000 ;
b1111111110100000 3
0"A
1R
0"C
17
1"=
1c
b1111111110100000 F
11
b00000000 "?
b1111111110100000 "7
b1111111110100000 z
1H
0|
b1111111110100000 _
b1111111110100000 B
1%
0"3
1Y
1D
b11000000 '
1"J
1"5
1p
1>
1)
1r
0@
1")
b1110111100000000 W
b1111111110100000 :
b001 "@
b1111111110100000 "+
#156
0v
0"B
0D
0"J
b0000000000000000 i
0a
0(
07
0>
b00000000 T
0"D
b00000000 "E
0A
0n
